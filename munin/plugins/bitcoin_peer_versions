#!/bin/sh
# -*- sh -*-

: << =cut

=head1 NAME

bitcoin_peer_versions - Plugin to monitor bitcoin daemon. 

=head1 CONFIGURATION

Settings are stored in /etc/munin/plugin-conf.d/bitcoin.
Edit the BITCOIN_DATADIR setting to specify the location of your bitcoin data directory.
Edit the BITCOIN_CLI setting to specify the location of bitcoin-cli.

=head1 NOTES

Uses env.BITCOIN_CLI and env.BITCOIN_DATADIR in /etc/munin/plugin-conf.d/bitcoin

=head1 AUTHOR

shsmith

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf

=cut

# return count+1 and version for current and all previously seen versions
known_versions() {
	vfile=/tmp/bitcoin_peer_versions

	# get new version items, sanitize as valid munin identifiers
	${BITCOIN_CLI} -datadir=$BITCOIN_DATADIR getpeerinfo | grep subver | grep / | tr '"' ' ' | sed 's/     subver :  //g; s/ ,//g' | \
		cut -c 1-45 | \
		sed 's/+/_PL_/g; s/ /_SP_/g; s#/#_SL_#g; s/:/_CO_/g; s/\./_DP_/g; s/;/_SC_/g; s/(/_OP_/g; s/)/_CL_/g; s/[^a-zA-Z0-9_]/-/g' > ${vfile}.new

	# combine with previously known versions
	if [ -e ${vfile}.known ]; then
		cat ${vfile}.known >> ${vfile}.new
	fi
	sort < ${vfile}.new | uniq > ${vfile}.known

	# return count+1 and version
	# limit to the most active 100 versions and sorted by peer count
	sort < ${vfile}.new | uniq -c | sort -n -r | head -n 100
}

if [ "$1" = "autoconf" ]; then
	echo yes
	exit 0
fi

if [ "$1" = "config" ]; then
	echo 'graph_title bitcoind peer versions'
	echo 'graph_args --base 1000 -l 0'
	echo 'graph_vlabel peers'
	echo 'graph_category bitcoind'
	known_versions | awk '{v=$2; gsub("_PL_","+",$2); gsub("_SL_","/",$2); gsub("_CO_",":"); gsub("_DP_",".",$2); gsub("_SC_",";",$2); gsub("_OP_","(",$2); gsub("_CL_",")",$2); gsub("_SP_"," ",$2); printf "version_%s.label %s\nversion_%s.draw AREASTACK\n", v, $2, v}'
	exit 0
fi

# subtract 1 from each count (allows 0 to be retained in historical charts)
known_versions | awk '{printf "version_%s.value %d\n", $2, $1-1}'

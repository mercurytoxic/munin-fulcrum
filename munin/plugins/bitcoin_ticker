#!/bin/sh
# -*- sh -*-

: << =cut

=head1 NAME

bitcoin_ticker - Plugin to monitor bitcoin tickers.

=head1 CONFIGURATION

No configuration.

=head1 NOTES

Uses python3.

=head1 AUTHOR

shsmith

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf

=cut

if [ "$1" = "autoconf" ]; then
	echo yes
	exit 0
fi

if [ "$1" = "config" ]; then
	echo 'graph_title Bitcoin tickers - USD'
	echo 'graph_args --base 1000'
	echo 'graph_scale no'
	echo 'graph_vlabel USD'
	echo 'graph_category bitcoind'
	echo 'bitcoinaverage.label bitcoinaverage.com'
	echo 'bitcoinaverage.max 100000'
	echo 'blockchain.label blockchain.info'
	echo 'blockchain.max 100000'
	echo 'cexio.label cex.io'
	echo 'cexio.max 100000'
	echo 'coinbase.label coinbase.com'
	echo 'coinbase.max 100000'
	echo 'coindesk.label coindesk.com'
	echo 'coindesk.max 100000'
	echo 'coinmarketcap.label coinmarketcap.com'
	echo 'coinmarketcap.max 100000'
	echo 'cryptonator.label cryptonator.com'
	echo 'cryptonator.max 100000'
	echo 'gemini.label gemini.com'
	echo 'gemini.max 100000'
	echo 'hitbtc.label hitbtc.com'
	echo 'hitbtc.max 100000'
	echo 'kraken.label kraken.com'
	echo 'kraken.max 100000'
	echo 'btce.label wex.nz (btc-e)'
	echo 'btce.max 100000'
	exit 0
fi

curl -m 10 -L -s 'https://apiv2.bitcoinaverage.com/indices/global/ticker/BTCUSD' | python3 -c '
import sys, json
try:
 j=json.load(sys.stdin); p=j["last"]
 print("bitcoinaverage.value " + str(p))
except:
 pass'

curl -m 10 -s 'https://blockchain.info/ticker' | python3 -c '
import sys, json
try:
 j=json.load(sys.stdin); p=j["USD"]["last"]
 print("blockchain.value " + str(p))
except:
 pass'

curl -m 10 -L -s 'https://api.pro.coinbase.com/products/BTC-USD/ticker' | python3 -c '
import sys, json
try:
 j=json.load(sys.stdin); p=j["price"]
 print("coinbase.value " + str(p))
except:
 pass'

curl -m 10 -L -s 'https://cex.io/api/last_price/BTC/USD' | python3 -c '
import sys, json
try:
 j=json.load(sys.stdin); p=j["lprice"]
 print("cexio.value " + str(p))
except:
 pass'

curl -m 10 -L -s 'https://api.coindesk.com/v1/bpi/currentprice.json' | python3 -c '
import sys, json
try:
 j=json.load(sys.stdin); p=j["bpi"]["USD"]["rate_float"]
 print("coindesk.value " + str(p))
except:
 pass'

curl -m 10 -L -s 'https://api.coinmarketcap.com/v1/ticker/bitcoin' | python3 -c '
import sys, json
try:
 j=json.load(sys.stdin); p=j[0]["price_usd"]
 print("coinmarketcap.value " + str(p))
except:
 pass'

curl -m 10 -L -s 'https://api.cryptonator.com/api/ticker/btc-usd' | python3 -c '
import sys, json
try:
 j=json.load(sys.stdin); p=float(j["ticker"]["price"])
 if p < 100000:
  print("cryptonator.value " + str(p))
except:
 pass'

curl -m 10 -L -s 'https://api.gemini.com/v1/pubticker/BTCUSD' | python3 -c '
import sys, json
try:
 j=json.load(sys.stdin); p=j["last"]
 print("gemini.value " + str(p))
except:
 pass'

curl -m 10 -L -s 'https://api.hitbtc.com/api/1/public/BTCUSD/ticker' | python3 -c '
import sys, json
try:
 j=json.load(sys.stdin); p=j["last"]
 print("hitbtc.value " + str(p))
except:
 pass'

curl -m 20 -L -s 'https://api.kraken.com/0/public/Ticker?pair=XBTUSD' | python3 -c '
import sys, json
try:
 j=json.load(sys.stdin); p=float(j["result"]["XXBTZUSD"]["c"][0])
 if p < 100000:
   print("kraken.value " + str(p))
except:
 pass'

curl -m 10 -L -s 'https://wex.nz/api/3/ticker/btc_usd' | python3 -c '
import sys, json
try:
 j=json.load(sys.stdin); p=j["btc_usd"]["last"]
 print("btce.value " + str(p))
except:
 pass'

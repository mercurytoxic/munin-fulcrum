#!/bin/sh
# -*- sh -*-

: << =cut

=head1 NAME

electrumx_client_versions - Plugin to monitor ElectrumX server.

=head1 CONFIGURATION

Settings are stored in /etc/munin/plugin-conf.d/bitcoin.
Edit the BITCOIN_DATADIR setting to specify the location of your bitcoin data directory.
Edit the BITCOIN_CLI setting to specify the location of bitcoin-cli.

=head1 NOTES

Uses env.ELECTRUMX_RPC in /etc/munin/plugin-conf.d/electrumx

=head1 AUTHOR

shsmith

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf

=cut

# return count+1 and version for current and all previously seen versions
known_versions() {
	vfile=/tmp/electrumx_client_versions
	knownfile=${vfile}.known2
	temp=${vfile}-$$

	# get new version items, sanitize as valid munin identifiers
	${ELECTRUMX_RPC} sessions | awk '{print $3}' > ${temp}i

	# combine with previously known versions
	echo "Client" >> ${knownfile}
	cat ${knownfile} >> ${temp}i
	grep < ${temp}i -v -e RPC -e Client | sort > ${temp}o
	uniq < ${temp}o > ${knownfile}

	# return count+1 and version
	# limit to the most active 100 versions 
	sed < ${temp}o 's/[^a-zA-Z0-9_]/-/g' | uniq -c | sort -n -r | head -n 100
	rm ${temp}*
}

# quit of daemon is not responding to RPC
uptime=`${ELECTRUMX_RPC} getinfo | grep -o uptime`
if [ "$uptime" = "" ]; then
	echo "${ELECTRUMX_RPC} not ready"
	exit 0
fi

if [ "$1" = "autoconf" ]; then
	echo yes
	exit 0
fi

if [ "$1" = "config" ]; then
	echo 'graph_title ElectrumX Client Versions'
	echo 'graph_args --base 1000 -l 0'
	echo 'graph_vlabel sessions'
	echo 'graph_category ElectrumX'
	known_versions | awk '{v=$2; gsub("-",".",$2); printf "version_%s.label %s\nversion_%s.draw AREASTACK\n", v, $2, v}'
	exit 0
fi

# subtract 1 from each count (allows 0 to be retained in historical charts)
known_versions | awk '{printf "version_%s.value %d\n", $2, $1-1}'

#!/bin/sh
# -*- sh -*-

: << =cut

=head1 NAME

electrumx_lsof - Plugin to monitor ElectrumX server.

=head1 CONFIGURATION

Settings are stored in /etc/munin/plugin-conf.d/electrumx.
Edit the ELECTRUMX_RPC setting to specify the location of electrumx_rpc.py.

=head1 NOTES

Uses env.ELECTRUMX_RPC in /etc/munin/plugin-conf.d/electrumx

=head1 AUTHOR

shsmith

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf

=cut

if [ "$1" = "autoconf" ]; then
	echo yes
	exit 0
fi

if [ "$1" = "config" ]; then
	echo 'graph_title ElectrumX Files'
	echo 'graph_args --base 1000 -l 0'
	echo 'graph_vlabel value'
	echo 'graph_category ElectrumX'
	echo 'lsof.label total'
	echo 'lsof.type GAUGE'
	echo 'lsof.max 10000'
	echo 'ipv4.label ipv4'
	echo 'ipv4.type GAUGE'
	echo 'ipv4.max 10000'
	echo 'ipv6.label ipv6'
	echo 'ipv6.type GAUGE'
	echo 'ipv6.max 10000'
#	echo 'sock.label sock'
#	echo 'sock.type GAUGE'
#	echo 'sock.max 10000'
	echo 'db.label db'
	echo 'db.type GAUGE'
	echo 'db.max 10000'
	echo 'sessions.label sessions'
	echo 'sessions.type GAUGE'
	echo 'sessions.max 10000'
	echo 'leak.label leaked handles'
	echo 'leak.type GAUGE'
	echo 'leak.max 10000'
	exit 0
fi

#{
#    "closing": 0,
#    "daemon_height": 443912,
#    "db_height": 443912,
#    "errors": 0,
#    "groups": 1,
#    "logged": 0,
#    "peers": 53,
#    "pid": 23142,
#    "requests": 0,
#    "sessions": 50,
#    "subs": 974,
#    "txs_sent": 1
#}

TFILE=/tmp/munin-electrumx-lsof-$$
${ELECTRUMX_RPC} getinfo > $TFILE

pid=`grep pid $TFILE | grep -o '[0-9]*'`
sessions=`grep \"count\" $TFILE | grep -o '[0-9]*'`
echo "sessions.value $sessions"

/usr/bin/lsof -p $pid -n | grep -v -e lib/python -e LISTEN > $TFILE

# check for arch linux, which doesn't include network handles by default
IP=`grep IP $TFILE | /usr/bin/wc -l`
if [ $IP = "0" ]; then
	/usr/bin/lsof -p $pid -n -i | grep IP | grep -v -e LISTEN >> $TFILE
fi

total=`/usr/bin/wc -l < $TFILE`
ipv4=`grep IPv4 $TFILE | /usr/bin/wc -l`
ipv6=`grep IPv6 $TFILE | /usr/bin/wc -l`
socks=`grep -e sock -e SOCK $TFILE | /usr/bin/wc -l`
db=`grep -v -e sock -e SOCK -e IPv $TFILE | /usr/bin/wc -l`
leak=`expr $ipv4 + $ipv6 - $sessions + 1`

echo "lsof.value $total"
echo "ipv4.value $ipv4"
echo "ipv6.value $ipv6"
#echo "sock.value $socks"
echo "db.value $db"
echo "leak.value $leak"

rm $TFILE

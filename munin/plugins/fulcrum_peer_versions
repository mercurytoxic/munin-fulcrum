#!/bin/sh
# -*- sh -*-

: << =cut

=head1 NAME

electrumx_peer_versions - Plugin to monitor ElectrumX server.

=head1 CONFIGURATION

Settings are stored in /etc/munin/plugin-conf.d/bitcoin.
Edit the BITCOIN_DATADIR setting to specify the location of your bitcoin data directory.
Edit the BITCOIN_CLI setting to specify the location of bitcoin-cli.

=head1 NOTES

Uses env.ELECTRUMX_RPC in /etc/munin/plugin-conf.d/electrumx

=head1 AUTHOR

shsmith

=head1 LICENSE

GPLv2

=head1 MAGIC MARKERS

 #%# family=auto
 #%# capabilities=autoconf

=cut

# return count+1 and version for current and all previously seen versions
known_versions() {
	vfile=/tmp/electrumx_peer_versions

	# get new version items, sanitize as valid munin identifiers
	# also strip out blacklisted peers
	${ELECTRUMX_RPC} peers | grep good | python3 -c '
import sys, json, requests
blacklist = json.loads(requests.get("https://electrum.org/blacklist.json").text)
for peer in sys.stdin:
        host = peer.split(" ",1)[0]
        pat = "*." + ".".join(host.split(".")[-2:])
        if not any(item in blacklist for item in (host, pat)):
                print(peer.rstrip())
' | awk '{print substr($0, index($0,"good"))}' | cut -c20-37 | sed 's/ /_/g; s#/#AA#g; s/+/plus/g; s/[^a-zA-Z0-9_]/-/g; s/-*$//' > ${vfile}.new

	# combine with previously known versions
	if [ -e ${vfile}.known ]; then
		cat ${vfile}.known >> ${vfile}.new
	fi
	sort < ${vfile}.new | uniq > ${vfile}.known

	# return count+1 and version
	# limit to the most active 100 versions
	sort < ${vfile}.new | uniq -c | sort -n -r | head -n 100
}

# quit of daemon is not responding to RPC
uptime=`${ELECTRUMX_RPC} getinfo | grep -o uptime`
if [ "$uptime" = "" ]; then
	echo "${ELECTRUMX_RPC} not ready"
	exit 0
fi

if [ "$1" = "autoconf" ]; then
	echo yes
	exit 0
fi

if [ "$1" = "config" ]; then
	echo 'graph_title ElectrumX Peer Versions'
	echo 'graph_args --base 1000 -l 0'
	echo 'graph_vlabel peers'
	echo 'graph_category ElectrumX'
	known_versions | awk '{v=$2; gsub("-",".",$2); gsub("AA","/"); gsub("_"," ",$2); gsub("plus","+",$2); printf "version_%s.label %s\nversion_%s.draw AREASTACK\n", v, $2, v}'
	exit 0
fi

# subtract 1 from each count (allows 0 to be retained in historical charts)
known_versions | awk '{printf "version_%s.value %d\n", $2, $1-1}'
